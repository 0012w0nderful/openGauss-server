diff --git expected/mysql_fdw.out expected/mysql_fdw.out
index 2d77913..882674a 100644
--- expected/mysql_fdw.out
+++ expected/mysql_fdw.out
@@ -13,6 +13,8 @@ CREATE FOREIGN TABLE numbers(a int, b varchar(255)) SERVER mysql_svr OPTIONS (db
 CREATE FOREIGN TABLE fdw126_ft1(stu_id int, stu_name varchar(255)) SERVER mysql_svr OPTIONS (dbname 'testdb1', table_name 'student');
 CREATE FOREIGN TABLE fdw126_ft2(stu_id int, stu_name varchar(255)) SERVER mysql_svr OPTIONS (table_name 'student');
 CREATE FOREIGN TABLE fdw126_ft3(a int, b varchar(255)) SERVER mysql_svr OPTIONS (dbname 'testdb1', table_name 'numbers');
+CREATE FOREIGN TABLE fdw126_ft4(a int, b varchar(255)) SERVER mysql_svr OPTIONS (dbname 'testdb1', table_name 'nosuchtable');
+CREATE FOREIGN TABLE fdw126_ft5(a int, b varchar(255)) SERVER mysql_svr OPTIONS (dbname 'testdb2', table_name 'numbers');
 SELECT * FROM department LIMIT 10;
  department_id | department_name 
 ---------------+-----------------
@@ -439,6 +441,14 @@ UPDATE fdw126_ft3 SET b = 'one' WHERE a = 1;
 ERROR:  first column of remote table must be unique for INSERT/UPDATE/DELETE operation
 DELETE FROM fdw126_ft3 WHERE a = 1;
 ERROR:  first column of remote table must be unique for INSERT/UPDATE/DELETE operation
+-- Perform the ANALYZE on the foreign table which is not present on the remote
+-- side.  Should not crash.
+-- The database is present but not the target table.
+ANALYZE fdw126_ft4;
+ERROR:  relation testdb1.nosuchtable does not exist
+-- The database itself is not present.
+ANALYZE fdw126_ft5;
+ERROR:  relation testdb2.numbers does not exist
 DELETE FROM employee;
 DELETE FROM department;
 DELETE FROM empdata;
@@ -452,6 +462,8 @@ DROP FOREIGN TABLE empdata;
 DROP FOREIGN TABLE fdw126_ft1;
 DROP FOREIGN TABLE fdw126_ft2;
 DROP FOREIGN TABLE fdw126_ft3;
+DROP FOREIGN TABLE fdw126_ft4;
+DROP FOREIGN TABLE fdw126_ft5;
 DROP USER MAPPING FOR postgres SERVER mysql_svr;
 DROP SERVER mysql_svr;
 DROP EXTENSION mysql_fdw CASCADE;
diff --git mysql_fdw.c mysql_fdw.c
index eaba2e3..1c8c71f 100644
--- mysql_fdw.c
+++ mysql_fdw.c
@@ -1209,7 +1209,6 @@ mysqlAnalyzeForeignTable(Relation relation, AcquireSampleRowsFunc *func, BlockNu
 	MYSQL_ROW      row;
 	Oid            foreignTableId = RelationGetRelid(relation);
 	mysql_opt      *options;
-	char           *relname;
 	ForeignServer  *server;
 	UserMapping    *user;
 	ForeignTable   *table;
@@ -1220,19 +1219,14 @@ mysqlAnalyzeForeignTable(Relation relation, AcquireSampleRowsFunc *func, BlockNu
 
 	/* Fetch options */
 	options = mysql_get_options(foreignTableId);
+	Assert(options->svr_database != NULL && options->svr_table != NULL);
 
 	/* Connect to the server */
 	conn = mysql_get_connection(server, user, options);
 
 	/* Build the query */
 	initStringInfo(&sql);
-
-	/* If no table name specified, use the foreign table name */
-	relname = options->svr_table;
-	if ( relname == NULL)
-			relname = RelationGetRelationName(relation);
-
-	mysql_deparse_analyze(&sql, options->svr_database, relname);
+	mysql_deparse_analyze(&sql, options->svr_database, options->svr_table);
 
 	if (_mysql_query(conn, sql.data) != 0)
 	{
@@ -1264,6 +1258,18 @@ mysqlAnalyzeForeignTable(Relation relation, AcquireSampleRowsFunc *func, BlockNu
 		}
 	}
 	result = _mysql_store_result(conn);
+
+	/*
+	 * To get the table size in ANALYZE operation, we run a SELECT query by
+	 * passing the database name and table name.  So if the remote table is not
+	 * present, then we end up getting zero rows.  Throw an error in that case.
+	 */
+	if (_mysql_num_rows(result) == 0)
+		ereport(ERROR,
+				(errcode(ERRCODE_FDW_TABLE_NOT_FOUND),
+				 errmsg("relation %s.%s does not exist", options->svr_database,
+						options->svr_table)));
+
 	if (result)
 	{
 		row = _mysql_fetch_row(result);
diff --git sql/mysql_fdw.sql sql/mysql_fdw.sql
index b350c23..776220a 100644
--- sql/mysql_fdw.sql
+++ sql/mysql_fdw.sql
@@ -15,6 +15,8 @@ CREATE FOREIGN TABLE numbers(a int, b varchar(255)) SERVER mysql_svr OPTIONS (db
 CREATE FOREIGN TABLE fdw126_ft1(stu_id int, stu_name varchar(255)) SERVER mysql_svr OPTIONS (dbname 'testdb1', table_name 'student');
 CREATE FOREIGN TABLE fdw126_ft2(stu_id int, stu_name varchar(255)) SERVER mysql_svr OPTIONS (table_name 'student');
 CREATE FOREIGN TABLE fdw126_ft3(a int, b varchar(255)) SERVER mysql_svr OPTIONS (dbname 'testdb1', table_name 'numbers');
+CREATE FOREIGN TABLE fdw126_ft4(a int, b varchar(255)) SERVER mysql_svr OPTIONS (dbname 'testdb1', table_name 'nosuchtable');
+CREATE FOREIGN TABLE fdw126_ft5(a int, b varchar(255)) SERVER mysql_svr OPTIONS (dbname 'testdb2', table_name 'numbers');
 
 SELECT * FROM department LIMIT 10;
 SELECT * FROM employee LIMIT 10;
@@ -145,6 +147,14 @@ SELECT * FROM fdw126_ft3 ORDER BY 1 LIMIT 1;
 UPDATE fdw126_ft3 SET b = 'one' WHERE a = 1;
 DELETE FROM fdw126_ft3 WHERE a = 1;
 
+-- Perform the ANALYZE on the foreign table which is not present on the remote
+-- side.  Should not crash.
+-- The database is present but not the target table.
+ANALYZE fdw126_ft4;
+-- The database itself is not present.
+ANALYZE fdw126_ft5;
+
+
 DELETE FROM employee;
 DELETE FROM department;
 DELETE FROM empdata;
@@ -160,6 +170,8 @@ DROP FOREIGN TABLE empdata;
 DROP FOREIGN TABLE fdw126_ft1;
 DROP FOREIGN TABLE fdw126_ft2;
 DROP FOREIGN TABLE fdw126_ft3;
+DROP FOREIGN TABLE fdw126_ft4;
+DROP FOREIGN TABLE fdw126_ft5;
 DROP USER MAPPING FOR postgres SERVER mysql_svr;
 DROP SERVER mysql_svr;
 DROP EXTENSION mysql_fdw CASCADE;
