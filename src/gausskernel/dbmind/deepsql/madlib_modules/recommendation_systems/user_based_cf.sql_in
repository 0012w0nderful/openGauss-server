/*
 * Portions Copyright (c) 2020 Huawei Technologies Co.,Ltd.
 *
 * openGauss is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *
 *          http://license.coscl.org.cn/MulanPSL2
 *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 * -------------------------------------------------------------------------
 */

-------------------------------------
-- Build user-based CF in database --
-------------------------------------

---------------------------------------------------------------------------------------------------
-- Note: This module allows you to use SQL to call user-based collaborative filtering algorithm. --
---------------------------------------------------------------------------------------------------

m4_include(`SQLCommon.m4')

-----------------
-- train & test--
-----------------
----------------------------------------------------------------------------------------------------------
-- train & test -- intermediate output table -------------------------------------------------------------
-- 1) train_table + '_usercf_sim': Table that stores all users and their similar users -------------------
-- 2) train_table + '_usercf_iif_sim': Table that stores all users and their similar users by using iif --
-- 3) train_table + '_usercf_score': Table that stores all users and their scored items ------------------
----------------------------------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.usercf_train(
    train_table TEXT,           -- Name of the table containing the train data
    user_varname TEXT,          -- Name of the user column from the train table
    item_varname TEXT,          -- Name of the item column from the train table
    rating_varname TEXT,        -- Name of the rating column from the train table
    k_sim_user INTEGER,         -- Parameter for selecting the top-k similar users
    use_iif_similarity BOOL,    -- (optional, default:False) Determine whether to use the improved algorithm version
    test_table TEXT,            -- (optional, default:None) Name of the table containing the test data
    n_rec_item INTEGER          -- (optional, default:10) Parameter for selecting the top-n recommended items
) RETURNS VOID AS $$ 
PythonFunction(recommendation_systems, user_based_cf, train)
$$ LANGUAGE plpythonu;

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.usercf_train(
    train_table TEXT,
    user_varname TEXT,
    item_varname TEXT,
    rating_varname TEXT,
    k_sim_user INTEGER,
    use_iif_similarity BOOL,
    test_table TEXT
) RETURNS VOID AS $$ 
SELECT MADLIB_SCHEMA.usercf_train($1, $2, $3, $4, $5, $6, $7, NULL);
$$ LANGUAGE sql;

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.usercf_train(
    train_table TEXT,
    user_varname TEXT,
    item_varname TEXT,
    rating_varname TEXT,
    k_sim_user INTEGER,
    use_iif_similarity BOOL
) RETURNS VOID AS $$ 
SELECT MADLIB_SCHEMA.usercf_train($1, $2, $3, $4, $5, $6, NULL, NULL);
$$ LANGUAGE sql;

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.usercf_train(
    train_table TEXT,
    user_varname TEXT,
    item_varname TEXT,
    rating_varname TEXT,
    k_sim_user INTEGER
) RETURNS VOID AS $$ 
SELECT MADLIB_SCHEMA.usercf_train($1, $2, $3, $4, $5, FALSE, NULL, NULL);
$$ LANGUAGE sql;

-------------
-- predict --
-------------
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.usercf_predict(
    train_table TEXT,           -- Name of the table containing the train data
    predict_table TEXT,         -- Name of the table containing the predict data
    user_varname TEXT,          -- Name of user column from the train table
    recommend_table TEXT,       -- Name of the output table containing the recommended items
    n_rec_item INTEGER          -- Parameter for selecting the top-n recommended items
) RETURNS VOID AS $$
PythonFunction(recommendation_systems, user_based_cf, predict)
$$ LANGUAGE plpythonu;
