// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remote_read.proto

#ifndef PROTOBUF_INCLUDED_remote_5fread_2eproto
#define PROTOBUF_INCLUDED_remote_5fread_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_remote_5fread_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_remote_5fread_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_remote_5fread_2eproto();
namespace gauss {
class CURequest;
class CURequestDefaultTypeInternal;
extern CURequestDefaultTypeInternal _CURequest_default_instance_;
class CUResponse;
class CUResponseDefaultTypeInternal;
extern CUResponseDefaultTypeInternal _CUResponse_default_instance_;
class PageRequest;
class PageRequestDefaultTypeInternal;
extern PageRequestDefaultTypeInternal _PageRequest_default_instance_;
class PageResponse;
class PageResponseDefaultTypeInternal;
extern PageResponseDefaultTypeInternal _PageResponse_default_instance_;
}  // namespace gauss
namespace google {
namespace protobuf {
template<> ::gauss::CURequest* Arena::CreateMaybeMessage<::gauss::CURequest>(Arena*);
template<> ::gauss::CUResponse* Arena::CreateMaybeMessage<::gauss::CUResponse>(Arena*);
template<> ::gauss::PageRequest* Arena::CreateMaybeMessage<::gauss::PageRequest>(Arena*);
template<> ::gauss::PageResponse* Arena::CreateMaybeMessage<::gauss::PageResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace gauss {

// ===================================================================

class CURequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gauss.CURequest) */ {
 public:
  CURequest();
  virtual ~CURequest();

  CURequest(const CURequest& from);

  inline CURequest& operator=(const CURequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CURequest(CURequest&& from) noexcept
    : CURequest() {
    *this = ::std::move(from);
  }

  inline CURequest& operator=(CURequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CURequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CURequest* internal_default_instance() {
    return reinterpret_cast<const CURequest*>(
               &_CURequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CURequest* other);
  friend void swap(CURequest& a, CURequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CURequest* New() const final {
    return CreateMaybeMessage<CURequest>(nullptr);
  }

  CURequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CURequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CURequest& from);
  void MergeFrom(const CURequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CURequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 spcnode = 1;
  void clear_spcnode();
  static const int kSpcnodeFieldNumber = 1;
  ::google::protobuf::uint32 spcnode() const;
  void set_spcnode(::google::protobuf::uint32 value);

  // uint32 dbnode = 2;
  void clear_dbnode();
  static const int kDbnodeFieldNumber = 2;
  ::google::protobuf::uint32 dbnode() const;
  void set_dbnode(::google::protobuf::uint32 value);

  // uint32 relnode = 3;
  void clear_relnode();
  static const int kRelnodeFieldNumber = 3;
  ::google::protobuf::uint32 relnode() const;
  void set_relnode(::google::protobuf::uint32 value);

  // int32 bucketnode = 4;
  void clear_bucketnode();
  static const int kBucketnodeFieldNumber = 4;
  ::google::protobuf::int32 bucketnode() const;
  void set_bucketnode(::google::protobuf::int32 value);

  // uint64 offset = 6;
  void clear_offset();
  static const int kOffsetFieldNumber = 6;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // int32 colid = 5;
  void clear_colid();
  static const int kColidFieldNumber = 5;
  ::google::protobuf::int32 colid() const;
  void set_colid(::google::protobuf::int32 value);

  // int32 size = 7;
  void clear_size();
  static const int kSizeFieldNumber = 7;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // uint64 lsn = 8;
  void clear_lsn();
  static const int kLsnFieldNumber = 8;
  ::google::protobuf::uint64 lsn() const;
  void set_lsn(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:gauss.CURequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 spcnode_;
  ::google::protobuf::uint32 dbnode_;
  ::google::protobuf::uint32 relnode_;
  ::google::protobuf::int32 bucketnode_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::int32 colid_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::uint64 lsn_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_remote_5fread_2eproto;
};
// -------------------------------------------------------------------

class CUResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gauss.CUResponse) */ {
 public:
  CUResponse();
  virtual ~CUResponse();

  CUResponse(const CUResponse& from);

  inline CUResponse& operator=(const CUResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUResponse(CUResponse&& from) noexcept
    : CUResponse() {
    *this = ::std::move(from);
  }

  inline CUResponse& operator=(CUResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUResponse* internal_default_instance() {
    return reinterpret_cast<const CUResponse*>(
               &_CUResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CUResponse* other);
  friend void swap(CUResponse& a, CUResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUResponse* New() const final {
    return CreateMaybeMessage<CUResponse>(nullptr);
  }

  CUResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUResponse& from);
  void MergeFrom(const CUResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes cudata = 3;
  void clear_cudata();
  static const int kCudataFieldNumber = 3;
  const ::std::string& cudata() const;
  void set_cudata(const ::std::string& value);
  #if LANG_CXX11
  void set_cudata(::std::string&& value);
  #endif
  void set_cudata(const char* value);
  void set_cudata(const void* value, size_t size);
  ::std::string* mutable_cudata();
  ::std::string* release_cudata();
  void set_allocated_cudata(::std::string* cudata);

  // int32 return_code = 1;
  void clear_return_code();
  static const int kReturnCodeFieldNumber = 1;
  ::google::protobuf::int32 return_code() const;
  void set_return_code(::google::protobuf::int32 value);

  // int32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gauss.CUResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cudata_;
  ::google::protobuf::int32 return_code_;
  ::google::protobuf::int32 size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_remote_5fread_2eproto;
};
// -------------------------------------------------------------------

class PageRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gauss.PageRequest) */ {
 public:
  PageRequest();
  virtual ~PageRequest();

  PageRequest(const PageRequest& from);

  inline PageRequest& operator=(const PageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PageRequest(PageRequest&& from) noexcept
    : PageRequest() {
    *this = ::std::move(from);
  }

  inline PageRequest& operator=(PageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageRequest* internal_default_instance() {
    return reinterpret_cast<const PageRequest*>(
               &_PageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PageRequest* other);
  friend void swap(PageRequest& a, PageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PageRequest* New() const final {
    return CreateMaybeMessage<PageRequest>(nullptr);
  }

  PageRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PageRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PageRequest& from);
  void MergeFrom(const PageRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 spcnode = 1;
  void clear_spcnode();
  static const int kSpcnodeFieldNumber = 1;
  ::google::protobuf::uint32 spcnode() const;
  void set_spcnode(::google::protobuf::uint32 value);

  // uint32 dbnode = 2;
  void clear_dbnode();
  static const int kDbnodeFieldNumber = 2;
  ::google::protobuf::uint32 dbnode() const;
  void set_dbnode(::google::protobuf::uint32 value);

  // uint32 relnode = 3;
  void clear_relnode();
  static const int kRelnodeFieldNumber = 3;
  ::google::protobuf::uint32 relnode() const;
  void set_relnode(::google::protobuf::uint32 value);

  // int32 bucketnode = 4;
  void clear_bucketnode();
  static const int kBucketnodeFieldNumber = 4;
  ::google::protobuf::int32 bucketnode() const;
  void set_bucketnode(::google::protobuf::int32 value);

  // int32 forknum = 5;
  void clear_forknum();
  static const int kForknumFieldNumber = 5;
  ::google::protobuf::int32 forknum() const;
  void set_forknum(::google::protobuf::int32 value);

  // uint32 blocknum = 6;
  void clear_blocknum();
  static const int kBlocknumFieldNumber = 6;
  ::google::protobuf::uint32 blocknum() const;
  void set_blocknum(::google::protobuf::uint32 value);

  // uint64 lsn = 8;
  void clear_lsn();
  static const int kLsnFieldNumber = 8;
  ::google::protobuf::uint64 lsn() const;
  void set_lsn(::google::protobuf::uint64 value);

  // uint32 blocksize = 7;
  void clear_blocksize();
  static const int kBlocksizeFieldNumber = 7;
  ::google::protobuf::uint32 blocksize() const;
  void set_blocksize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gauss.PageRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 spcnode_;
  ::google::protobuf::uint32 dbnode_;
  ::google::protobuf::uint32 relnode_;
  ::google::protobuf::int32 bucketnode_;
  ::google::protobuf::int32 forknum_;
  ::google::protobuf::uint32 blocknum_;
  ::google::protobuf::uint64 lsn_;
  ::google::protobuf::uint32 blocksize_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_remote_5fread_2eproto;
};
// -------------------------------------------------------------------

class PageResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gauss.PageResponse) */ {
 public:
  PageResponse();
  virtual ~PageResponse();

  PageResponse(const PageResponse& from);

  inline PageResponse& operator=(const PageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PageResponse(PageResponse&& from) noexcept
    : PageResponse() {
    *this = ::std::move(from);
  }

  inline PageResponse& operator=(PageResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageResponse* internal_default_instance() {
    return reinterpret_cast<const PageResponse*>(
               &_PageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PageResponse* other);
  friend void swap(PageResponse& a, PageResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PageResponse* New() const final {
    return CreateMaybeMessage<PageResponse>(nullptr);
  }

  PageResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PageResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PageResponse& from);
  void MergeFrom(const PageResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes pagedata = 3;
  void clear_pagedata();
  static const int kPagedataFieldNumber = 3;
  const ::std::string& pagedata() const;
  void set_pagedata(const ::std::string& value);
  #if LANG_CXX11
  void set_pagedata(::std::string&& value);
  #endif
  void set_pagedata(const char* value);
  void set_pagedata(const void* value, size_t size);
  ::std::string* mutable_pagedata();
  ::std::string* release_pagedata();
  void set_allocated_pagedata(::std::string* pagedata);

  // int32 return_code = 1;
  void clear_return_code();
  static const int kReturnCodeFieldNumber = 1;
  ::google::protobuf::int32 return_code() const;
  void set_return_code(::google::protobuf::int32 value);

  // int32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gauss.PageResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pagedata_;
  ::google::protobuf::int32 return_code_;
  ::google::protobuf::int32 size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_remote_5fread_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CURequest

// uint32 spcnode = 1;
inline void CURequest::clear_spcnode() {
  spcnode_ = 0u;
}
inline ::google::protobuf::uint32 CURequest::spcnode() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.spcnode)
  return spcnode_;
}
inline void CURequest::set_spcnode(::google::protobuf::uint32 value) {
  
  spcnode_ = value;
  // @@protoc_insertion_point(field_set:gauss.CURequest.spcnode)
}

// uint32 dbnode = 2;
inline void CURequest::clear_dbnode() {
  dbnode_ = 0u;
}
inline ::google::protobuf::uint32 CURequest::dbnode() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.dbnode)
  return dbnode_;
}
inline void CURequest::set_dbnode(::google::protobuf::uint32 value) {
  
  dbnode_ = value;
  // @@protoc_insertion_point(field_set:gauss.CURequest.dbnode)
}

// uint32 relnode = 3;
inline void CURequest::clear_relnode() {
  relnode_ = 0u;
}
inline ::google::protobuf::uint32 CURequest::relnode() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.relnode)
  return relnode_;
}
inline void CURequest::set_relnode(::google::protobuf::uint32 value) {
  
  relnode_ = value;
  // @@protoc_insertion_point(field_set:gauss.CURequest.relnode)
}

// int32 bucketnode = 4;
inline void CURequest::clear_bucketnode() {
  bucketnode_ = 0;
}
inline ::google::protobuf::int32 CURequest::bucketnode() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.bucketnode)
  return bucketnode_;
}
inline void CURequest::set_bucketnode(::google::protobuf::int32 value) {
  
  bucketnode_ = value;
  // @@protoc_insertion_point(field_set:gauss.CURequest.bucketnode)
}

// int32 colid = 5;
inline void CURequest::clear_colid() {
  colid_ = 0;
}
inline ::google::protobuf::int32 CURequest::colid() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.colid)
  return colid_;
}
inline void CURequest::set_colid(::google::protobuf::int32 value) {
  
  colid_ = value;
  // @@protoc_insertion_point(field_set:gauss.CURequest.colid)
}

// uint64 offset = 6;
inline void CURequest::clear_offset() {
  offset_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CURequest::offset() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.offset)
  return offset_;
}
inline void CURequest::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:gauss.CURequest.offset)
}

// int32 size = 7;
inline void CURequest::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 CURequest::size() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.size)
  return size_;
}
inline void CURequest::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:gauss.CURequest.size)
}

// uint64 lsn = 8;
inline void CURequest::clear_lsn() {
  lsn_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CURequest::lsn() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.lsn)
  return lsn_;
}
inline void CURequest::set_lsn(::google::protobuf::uint64 value) {
  
  lsn_ = value;
  // @@protoc_insertion_point(field_set:gauss.CURequest.lsn)
}

// -------------------------------------------------------------------

// CUResponse

// int32 return_code = 1;
inline void CUResponse::clear_return_code() {
  return_code_ = 0;
}
inline ::google::protobuf::int32 CUResponse::return_code() const {
  // @@protoc_insertion_point(field_get:gauss.CUResponse.return_code)
  return return_code_;
}
inline void CUResponse::set_return_code(::google::protobuf::int32 value) {
  
  return_code_ = value;
  // @@protoc_insertion_point(field_set:gauss.CUResponse.return_code)
}

// int32 size = 2;
inline void CUResponse::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 CUResponse::size() const {
  // @@protoc_insertion_point(field_get:gauss.CUResponse.size)
  return size_;
}
inline void CUResponse::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:gauss.CUResponse.size)
}

// bytes cudata = 3;
inline void CUResponse::clear_cudata() {
  cudata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CUResponse::cudata() const {
  // @@protoc_insertion_point(field_get:gauss.CUResponse.cudata)
  return cudata_.GetNoArena();
}
inline void CUResponse::set_cudata(const ::std::string& value) {
  
  cudata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gauss.CUResponse.cudata)
}
#if LANG_CXX11
inline void CUResponse::set_cudata(::std::string&& value) {
  
  cudata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gauss.CUResponse.cudata)
}
#endif
inline void CUResponse::set_cudata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cudata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gauss.CUResponse.cudata)
}
inline void CUResponse::set_cudata(const void* value, size_t size) {
  
  cudata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gauss.CUResponse.cudata)
}
inline ::std::string* CUResponse::mutable_cudata() {
  
  // @@protoc_insertion_point(field_mutable:gauss.CUResponse.cudata)
  return cudata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUResponse::release_cudata() {
  // @@protoc_insertion_point(field_release:gauss.CUResponse.cudata)
  
  return cudata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUResponse::set_allocated_cudata(::std::string* cudata) {
  if (cudata != nullptr) {
    
  } else {
    
  }
  cudata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cudata);
  // @@protoc_insertion_point(field_set_allocated:gauss.CUResponse.cudata)
}

// -------------------------------------------------------------------

// PageRequest

// uint32 spcnode = 1;
inline void PageRequest::clear_spcnode() {
  spcnode_ = 0u;
}
inline ::google::protobuf::uint32 PageRequest::spcnode() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.spcnode)
  return spcnode_;
}
inline void PageRequest::set_spcnode(::google::protobuf::uint32 value) {
  
  spcnode_ = value;
  // @@protoc_insertion_point(field_set:gauss.PageRequest.spcnode)
}

// uint32 dbnode = 2;
inline void PageRequest::clear_dbnode() {
  dbnode_ = 0u;
}
inline ::google::protobuf::uint32 PageRequest::dbnode() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.dbnode)
  return dbnode_;
}
inline void PageRequest::set_dbnode(::google::protobuf::uint32 value) {
  
  dbnode_ = value;
  // @@protoc_insertion_point(field_set:gauss.PageRequest.dbnode)
}

// uint32 relnode = 3;
inline void PageRequest::clear_relnode() {
  relnode_ = 0u;
}
inline ::google::protobuf::uint32 PageRequest::relnode() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.relnode)
  return relnode_;
}
inline void PageRequest::set_relnode(::google::protobuf::uint32 value) {
  
  relnode_ = value;
  // @@protoc_insertion_point(field_set:gauss.PageRequest.relnode)
}

// int32 bucketnode = 4;
inline void PageRequest::clear_bucketnode() {
  bucketnode_ = 0;
}
inline ::google::protobuf::int32 PageRequest::bucketnode() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.bucketnode)
  return bucketnode_;
}
inline void PageRequest::set_bucketnode(::google::protobuf::int32 value) {
  
  bucketnode_ = value;
  // @@protoc_insertion_point(field_set:gauss.PageRequest.bucketnode)
}

// int32 forknum = 5;
inline void PageRequest::clear_forknum() {
  forknum_ = 0;
}
inline ::google::protobuf::int32 PageRequest::forknum() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.forknum)
  return forknum_;
}
inline void PageRequest::set_forknum(::google::protobuf::int32 value) {
  
  forknum_ = value;
  // @@protoc_insertion_point(field_set:gauss.PageRequest.forknum)
}

// uint32 blocknum = 6;
inline void PageRequest::clear_blocknum() {
  blocknum_ = 0u;
}
inline ::google::protobuf::uint32 PageRequest::blocknum() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.blocknum)
  return blocknum_;
}
inline void PageRequest::set_blocknum(::google::protobuf::uint32 value) {
  
  blocknum_ = value;
  // @@protoc_insertion_point(field_set:gauss.PageRequest.blocknum)
}

// uint32 blocksize = 7;
inline void PageRequest::clear_blocksize() {
  blocksize_ = 0u;
}
inline ::google::protobuf::uint32 PageRequest::blocksize() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.blocksize)
  return blocksize_;
}
inline void PageRequest::set_blocksize(::google::protobuf::uint32 value) {
  
  blocksize_ = value;
  // @@protoc_insertion_point(field_set:gauss.PageRequest.blocksize)
}

// uint64 lsn = 8;
inline void PageRequest::clear_lsn() {
  lsn_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PageRequest::lsn() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.lsn)
  return lsn_;
}
inline void PageRequest::set_lsn(::google::protobuf::uint64 value) {
  
  lsn_ = value;
  // @@protoc_insertion_point(field_set:gauss.PageRequest.lsn)
}

// -------------------------------------------------------------------

// PageResponse

// int32 return_code = 1;
inline void PageResponse::clear_return_code() {
  return_code_ = 0;
}
inline ::google::protobuf::int32 PageResponse::return_code() const {
  // @@protoc_insertion_point(field_get:gauss.PageResponse.return_code)
  return return_code_;
}
inline void PageResponse::set_return_code(::google::protobuf::int32 value) {
  
  return_code_ = value;
  // @@protoc_insertion_point(field_set:gauss.PageResponse.return_code)
}

// int32 size = 2;
inline void PageResponse::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 PageResponse::size() const {
  // @@protoc_insertion_point(field_get:gauss.PageResponse.size)
  return size_;
}
inline void PageResponse::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:gauss.PageResponse.size)
}

// bytes pagedata = 3;
inline void PageResponse::clear_pagedata() {
  pagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PageResponse::pagedata() const {
  // @@protoc_insertion_point(field_get:gauss.PageResponse.pagedata)
  return pagedata_.GetNoArena();
}
inline void PageResponse::set_pagedata(const ::std::string& value) {
  
  pagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gauss.PageResponse.pagedata)
}
#if LANG_CXX11
inline void PageResponse::set_pagedata(::std::string&& value) {
  
  pagedata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gauss.PageResponse.pagedata)
}
#endif
inline void PageResponse::set_pagedata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gauss.PageResponse.pagedata)
}
inline void PageResponse::set_pagedata(const void* value, size_t size) {
  
  pagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gauss.PageResponse.pagedata)
}
inline ::std::string* PageResponse::mutable_pagedata() {
  
  // @@protoc_insertion_point(field_mutable:gauss.PageResponse.pagedata)
  return pagedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PageResponse::release_pagedata() {
  // @@protoc_insertion_point(field_release:gauss.PageResponse.pagedata)
  
  return pagedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PageResponse::set_allocated_pagedata(::std::string* pagedata) {
  if (pagedata != nullptr) {
    
  } else {
    
  }
  pagedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pagedata);
  // @@protoc_insertion_point(field_set_allocated:gauss.PageResponse.pagedata)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gauss

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_remote_5fread_2eproto
