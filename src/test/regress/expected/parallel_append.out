CREATE SCHEMA parallel_append_schema;
SET CURRENT_SCHEMA TO parallel_append_schema;
create table a (a1 int, a2 int, a3 int);
create table b (b1 int, b2 int, b3 int);
create table c (c1 int, c2 int, c3 int);
create table d (d1 int, d2 int, d3 int);
create table e (e1 int, e2 int, e3 int);
insert into a values(1,1,1),(2,2,2),(3,3,3),(4,4,4),(5,5,5);
insert into b values(4,4,4),(5,5,5),(6,6,6),(7,7,7),(8,8,8);
insert into c values(7,7,7),(8,8,8),(9,9,9),(0,0,0),(0,0,0);
insert into d select a1, a2 + 1, a3 + 2 from a;
insert into d select a1, a2 + 2, a3 * 2 from a;
insert into e select * from b where b1 < 7;
insert into e select * from c where c1 = 0 or c1 > 7;
analyze a;
analyze b;
analyze c;
analyze d;
analyze e;
set max_parallel_workers_per_gather to 3;
set force_parallel_mode to on;
set min_parallel_table_scan_size to 0;
set parallel_tuple_cost to 0.00000005;
set parallel_setup_cost to 0;
set enable_parallel_append to on;
-------------------------------------------
-- 1. union && union all
-------------------------------------------
explain select * from a union select * from b;
--?.*QUERY PLAN.*
--?-------------.*
--? HashAggregate  (cost=.* rows=10 width=12)
   Group By Key: a.a1, a.a2, a.a3
--?   ->  Append  (cost=.* rows=10 width=12)
--?         ->  Gather  (cost=.* rows=5 width=12)
               Number of Workers: 1
--?               ->  Parallel Seq Scan on a  (cost=.* rows=3 width=12)
--?         ->  Gather  (cost=.* rows=5 width=12)
               Number of Workers: 1
--?               ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
(9 rows)

explain select * from a union all select * from b;
--?.*QUERY PLAN.*
--?-----------.*
--? Gather  (cost=.* rows=10 width=12)
   Number of Workers: 2
--?   ->  Parallel Append  (cost=.* rows=4 width=12)
--?         ->  Parallel Seq Scan on a  (cost=.* rows=3 width=12)
--?         ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
(5 rows)

explain select * from a where a1 > 4 union select * from b where b1 < 6;
--?.*QUERY PLAN.*
--?---------.*
--? HashAggregate  (cost=.* rows=3 width=12)
   Group By Key: a.a1, a.a2, a.a3
--?   ->  Append  (cost=.* rows=3 width=12)
--?         ->  Gather  (cost=.* rows=1 width=12)
               Number of Workers: 1
--?               ->  Parallel Seq Scan on a  (cost=.* rows=1 width=12)
                     Filter: (a1 > 4)
--?         ->  Gather  (cost=.* rows=2 width=12)
               Number of Workers: 1
--?               ->  Parallel Seq Scan on b  (cost=.* rows=1 width=12)
                     Filter: (b1 < 6)
(11 rows)

explain select * from a where a1 > 4 union all select * from b where b1 < 6;
--?.*QUERY PLAN.*
--?--------.*
--? Result  (cost=.* rows=3 width=12)
--?   ->  Append  (cost=.* rows=3 width=12)
--?         ->  Gather  (cost=.* rows=1 width=12)
               Number of Workers: 1
--?               ->  Parallel Seq Scan on a  (cost=.* rows=1 width=12)
                     Filter: (a1 > 4)
--?         ->  Gather  (cost=.* rows=2 width=12)
               Number of Workers: 1
--?               ->  Parallel Seq Scan on b  (cost=.* rows=1 width=12)
                     Filter: (b1 < 6)
(10 rows)

explain select * from c where c1 in (select a1 from a union select b1 from b);
--?.*QUERY PLAN.*
--?-------.*
--? Hash Join  (cost=.* rows=5 width=12)
   Hash Cond: (a.a1 = c.c1)
--?   ->  HashAggregate  (cost=.* rows=10 width=4)
         Group By Key: a.a1
--?         ->  Append  (cost=.* rows=10 width=4)
--?               ->  Seq Scan on a  (cost=.* rows=5 width=4)
--?               ->  Seq Scan on b  (cost=.* rows=5 width=4)
--?   ->  Hash  (cost=.* rows=5 width=12)
--?         ->  Seq Scan on c  (cost=.* rows=5 width=12)
(9 rows)

explain select * from (select * from a union all select * from b) as ta, c where ta.a1 = c.c1;
--?.*QUERY PLAN.*
--?------.*
--? Hash Join  (cost=.* rows=5 width=24)
   Hash Cond: (a.a1 = c.c1)
--?   ->  Gather  (cost=.* rows=10 width=12)
         Number of Workers: 2
--?         ->  Parallel Append  (cost=.* rows=4 width=12)
--?               ->  Parallel Seq Scan on a  (cost=.* rows=3 width=12)
--?               ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
--?   ->  Hash  (cost=.* rows=5 width=12)
--?         ->  Gather  (cost=.* rows=5 width=12)
               Number of Workers: 1
--?               ->  Parallel Seq Scan on c  (cost=.* rows=3 width=12)
(11 rows)

explain select * from d left outer join (select * from a union all select * from b) as t on d.d1=t.a1;
--?.*QUERY PLAN.*
--?-----.*
--? Hash Right Join  (cost=.* rows=10 width=24)
   Hash Cond: (a.a1 = d.d1)
--?   ->  Gather  (cost=.* rows=10 width=12)
         Number of Workers: 2
--?         ->  Parallel Append  (cost=.* rows=4 width=12)
--?               ->  Parallel Seq Scan on a  (cost=.* rows=3 width=12)
--?               ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
--?   ->  Hash  (cost=.* rows=10 width=12)
--?         ->  Gather  (cost=.* rows=10 width=12)
               Number of Workers: 1
--?               ->  Parallel Seq Scan on d  (cost=.* rows=6 width=12)
(11 rows)

explain select d.d1, sum(d.d2), sum(t.a2) from (select * from a union all select * from b) t, d where t.a1=d1 group by d.d1 order by 1,2;
--?.*QUERY PLAN.*
--?-------.*
--? Sort  (cost=.* rows=5 width=28)
   Sort Key: d.d1, (sum(d.d2))
--?   ->  HashAggregate  (cost=.* rows=5 width=28)
         Group By Key: d.d1
--?         ->  Hash Join  (cost=.* rows=10 width=12)
               Hash Cond: (a.a1 = d.d1)
--?               ->  Gather  (cost=.* rows=10 width=8)
                     Number of Workers: 2
--?                     ->  Parallel Append  (cost=.* rows=4 width=8)
--?                           ->  Parallel Seq Scan on a  (cost=.* rows=3 width=8)
--?                           ->  Parallel Seq Scan on b  (cost=.* rows=3 width=8)
--?               ->  Hash  (cost=.* rows=10 width=8)
--?                     ->  Gather  (cost=.* rows=10 width=8)
                           Number of Workers: 1
--?                           ->  Parallel Seq Scan on d  (cost=.* rows=6 width=8)
(15 rows)

select * from a union select * from b;
 a1 | a2 | a3 
----+----+----
  3 |  3 |  3
  5 |  5 |  5
  8 |  8 |  8
  1 |  1 |  1
  7 |  7 |  7
  2 |  2 |  2
  4 |  4 |  4
  6 |  6 |  6
(8 rows)

select * from a union all select * from b;
 a1 | a2 | a3 
----+----+----
  4 |  4 |  4
  5 |  5 |  5
  6 |  6 |  6
  7 |  7 |  7
  8 |  8 |  8
  1 |  1 |  1
  2 |  2 |  2
  3 |  3 |  3
  4 |  4 |  4
  5 |  5 |  5
(10 rows)

select * from a where a1 > 4 union select * from b where b1 < 6;
 a1 | a2 | a3 
----+----+----
  5 |  5 |  5
  4 |  4 |  4
(2 rows)

select * from a where a1 > 4 union all select * from b where b1 < 6;
 a1 | a2 | a3 
----+----+----
  5 |  5 |  5
  4 |  4 |  4
  5 |  5 |  5
(3 rows)

select * from c where c1 in (select a1 from a union select b1 from b);
 c1 | c2 | c3 
----+----+----
  7 |  7 |  7
  8 |  8 |  8
(2 rows)

select * from (select * from a union all select * from b) as ta, c where ta.a1 = c.c1;
 a1 | a2 | a3 | c1 | c2 | c3 
----+----+----+----+----+----
  7 |  7 |  7 |  7 |  7 |  7
  8 |  8 |  8 |  8 |  8 |  8
(2 rows)

select * from d left outer join (select * from a union all select * from b) as t on d.d1=t.a1;
 d1 | d2 | d3 | a1 | a2 | a3 
----+----+----+----+----+----
  4 |  6 |  8 |  4 |  4 |  4
  4 |  5 |  6 |  4 |  4 |  4
  5 |  7 | 10 |  5 |  5 |  5
  5 |  6 |  7 |  5 |  5 |  5
  1 |  3 |  2 |  1 |  1 |  1
  1 |  2 |  3 |  1 |  1 |  1
  2 |  4 |  4 |  2 |  2 |  2
  2 |  3 |  4 |  2 |  2 |  2
  3 |  5 |  6 |  3 |  3 |  3
  3 |  4 |  5 |  3 |  3 |  3
  4 |  6 |  8 |  4 |  4 |  4
  4 |  5 |  6 |  4 |  4 |  4
  5 |  7 | 10 |  5 |  5 |  5
  5 |  6 |  7 |  5 |  5 |  5
(14 rows)

select d.d1, sum(d.d2), sum(t.a2) from (select * from a union all select * from b) t, d where t.a1=d1 group by d.d1 order by 1,2;
 d1 | sum | sum 
----+-----+-----
  1 |   5 |   2
  2 |   7 |   4
  3 |   9 |   6
  4 |  22 |  16
  5 |  26 |  20
(5 rows)

---------------------------------------
-- 2. except && except all
---------------------------------------
select * from c except select * from b where b1 >4;
 c1 | c2 | c3 
----+----+----
  0 |  0 |  0
  9 |  9 |  9
(2 rows)

select * from c except all select * from b where b1 >4;
 c1 | c2 | c3 
----+----+----
  0 |  0 |  0
  0 |  0 |  0
  9 |  9 |  9
(3 rows)

explain select * from c except select * from b where b1 >4;
--?.*QUERY PLAN.*
--?------.*
--? HashSetOp Except  (cost=.* rows=5 width=12)
--?   ->  Append  (cost=.* rows=10 width=12)
--?         ->  Subquery Scan on "*SELECT* 1"  (cost=.* rows=5 width=12)
--?               ->  Gather  (cost=.* rows=5 width=12)
                     Number of Workers: 1
--?                     ->  Parallel Seq Scan on c  (cost=.* rows=3 width=12)
--?         ->  Subquery Scan on "*SELECT* 2"  (cost=.* rows=5 width=12)
--?               ->  Gather  (cost=.* rows=5 width=12)
                     Number of Workers: 1
--?                     ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
                           Filter: (b1 > 4)
(11 rows)

explain select * from c except all select * from b where b1 >4;
--?.*QUERY PLAN.*
--?--------.*
--? HashSetOp Except All  (cost=.* rows=5 width=12)
--?   ->  Append  (cost=.* rows=10 width=12)
--?         ->  Subquery Scan on "*SELECT* 1"  (cost=.* rows=5 width=12)
--?               ->  Gather  (cost=.* rows=5 width=12)
                     Number of Workers: 1
--?                     ->  Parallel Seq Scan on c  (cost=.* rows=3 width=12)
--?         ->  Subquery Scan on "*SELECT* 2"  (cost=.* rows=5 width=12)
--?               ->  Gather  (cost=.* rows=5 width=12)
                     Number of Workers: 1
--?                     ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
                           Filter: (b1 > 4)
(11 rows)

---------------------------------------
-- 3. intersect && intersect all
---------------------------------------
select * from e intersect select * from c;
 e1 | e2 | e3 
----+----+----
  0 |  0 |  0
  8 |  8 |  8
  9 |  9 |  9
(3 rows)

select * from e intersect all select * from c where c1 != 8;
 e1 | e2 | e3 
----+----+----
  9 |  9 |  9
  0 |  0 |  0
  0 |  0 |  0
(3 rows)

explain select * from e intersect select * from c;
--?.*QUERY PLAN.*
--?----------.*
--? HashSetOp Intersect  (cost=.* rows=5 width=12)
--?   ->  Append  (cost=.* rows=12 width=12)
--?         ->  Subquery Scan on "*SELECT* 2"  (cost=.* rows=5 width=12)
--?               ->  Gather  (cost=.* rows=5 width=12)
                     Number of Workers: 1
--?                     ->  Parallel Seq Scan on c  (cost=.* rows=3 width=12)
--?         ->  Subquery Scan on "*SELECT* 1"  (cost=.* rows=7 width=12)
--?               ->  Gather  (cost=.* rows=7 width=12)
                     Number of Workers: 1
--?                     ->  Parallel Seq Scan on e  (cost=.* rows=4 width=12)
(10 rows)

explain select * from e intersect all select * from c where c1 != 8;
--?.*QUERY PLAN.*
--?---------.*
--? HashSetOp Intersect All  (cost=.* rows=4 width=12)
--?   ->  Append  (cost=.* rows=11 width=12)
--?         ->  Subquery Scan on "*SELECT* 2"  (cost=.* rows=4 width=12)
--?               ->  Gather  (cost=.* rows=4 width=12)
                     Number of Workers: 1
--?                     ->  Parallel Seq Scan on c  (cost=.* rows=2 width=12)
                           Filter: (c1 <> 8)
--?         ->  Subquery Scan on "*SELECT* 1"  (cost=.* rows=7 width=12)
--?               ->  Gather  (cost=.* rows=7 width=12)
                     Number of Workers: 1
--?                     ->  Parallel Seq Scan on e  (cost=.* rows=4 width=12)
(11 rows)

--------------------------------------
-- 4. case: 3+ tables, union + except + intersect
--------------------------------------
select * from e intersect (select * from a except select * from b union select * from c);
 e1 | e2 | e3 
----+----+----
  0 |  0 |  0
  8 |  8 |  8
  9 |  9 |  9
(3 rows)

select d2 from d except all (select d2 from d except select c1 from c) union all select e1 from e;
 d2 
----
  7
  3
  5
  6
  4
  4
  5
  6
  8
  9
  0
  0
(12 rows)

select * from a union all (select * from b union select * from c where c1 < 5);
 a1 | a2 | a3 
----+----+----
  1 |  1 |  1
  2 |  2 |  2
  3 |  3 |  3
  4 |  4 |  4
  5 |  5 |  5
  5 |  5 |  5
  7 |  7 |  7
  0 |  0 |  0
  8 |  8 |  8
  4 |  4 |  4
  6 |  6 |  6
(11 rows)

select * from a except select * from b union select * from c;
 a1 | a2 | a3 
----+----+----
  3 |  3 |  3
  0 |  0 |  0
  8 |  8 |  8
  1 |  1 |  1
  7 |  7 |  7
  9 |  9 |  9
  2 |  2 |  2
(7 rows)

select * from b union all (select * from (select * from a union all select * from b));
 b1 | b2 | b3 
----+----+----
  4 |  4 |  4
  5 |  5 |  5
  6 |  6 |  6
  7 |  7 |  7
  8 |  8 |  8
  1 |  1 |  1
  2 |  2 |  2
  3 |  3 |  3
  4 |  4 |  4
  5 |  5 |  5
  4 |  4 |  4
  5 |  5 |  5
  6 |  6 |  6
  7 |  7 |  7
  8 |  8 |  8
(15 rows)

select * from (select * from a union all select * from b)as x, (select * from d union all select* from e)as y
    where x.a1 = y.d1 order by 1, 2, 3, 4, 5, 6;
 a1 | a2 | a3 | d1 | d2 | d3 
----+----+----+----+----+----
  1 |  1 |  1 |  1 |  2 |  3
  1 |  1 |  1 |  1 |  3 |  2
  2 |  2 |  2 |  2 |  3 |  4
  2 |  2 |  2 |  2 |  4 |  4
  3 |  3 |  3 |  3 |  4 |  5
  3 |  3 |  3 |  3 |  5 |  6
  4 |  4 |  4 |  4 |  4 |  4
  4 |  4 |  4 |  4 |  4 |  4
  4 |  4 |  4 |  4 |  5 |  6
  4 |  4 |  4 |  4 |  5 |  6
  4 |  4 |  4 |  4 |  6 |  8
  4 |  4 |  4 |  4 |  6 |  8
  5 |  5 |  5 |  5 |  5 |  5
  5 |  5 |  5 |  5 |  5 |  5
  5 |  5 |  5 |  5 |  6 |  7
  5 |  5 |  5 |  5 |  6 |  7
  5 |  5 |  5 |  5 |  7 | 10
  5 |  5 |  5 |  5 |  7 | 10
  6 |  6 |  6 |  6 |  6 |  6
  8 |  8 |  8 |  8 |  8 |  8
(20 rows)

explain select * from e intersect (select * from a except select * from b union select * from c);
--?.*QUERY PLAN.*
--?------.*
--? HashSetOp Intersect  (cost=.* rows=7 width=12)
--?   ->  Append  (cost=.* rows=17 width=12)
--?         ->  Subquery Scan on "*SELECT* 1"  (cost=.* rows=7 width=12)
--?               ->  Gather  (cost=.* rows=7 width=12)
                     Number of Workers: 1
--?                     ->  Parallel Seq Scan on e  (cost=.* rows=4 width=12)
--?         ->  Result  (cost=.* rows=10 width=12)
--?               ->  HashAggregate  (cost=.* rows=10 width=12)
                     Group By Key: "*SELECT* 2".a1, "*SELECT* 2".a2, "*SELECT* 2".a3
--?                     ->  Append  (cost=.* rows=10 width=12)
--?                           ->  Result  (cost=.* rows=5 width=12)
--?                                 ->  HashSetOp Except  (cost=.* rows=5 width=12)
--?                                       ->  Append  (cost=.* rows=10 width=12)
--?                                             ->  Subquery Scan on "*SELECT* 2"  (cost=.* rows=5 width=12)
--?                                                   ->  Gather  (cost=.* rows=5 width=12)
                                                         Number of Workers: 1
--?                                                         ->  Parallel Seq Scan on a  (cost=.* rows=3 width=12)
--?                                             ->  Subquery Scan on "*SELECT* 3"  (cost=.* rows=5 width=12)
--?                                                   ->  Gather  (cost=.* rows=5 width=12)
                                                         Number of Workers: 1
--?                                                         ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
--?                           ->  Gather  (cost=.* rows=5 width=12)
                                 Number of Workers: 1
--?                                 ->  Parallel Seq Scan on c  (cost=.* rows=3 width=12)
(24 rows)

explain select d2 from d except all (select d2 from d except select c1 from c) union all select e1 from e;
--?.*QUERY PLAN.*
--?-------------.*
--? Append  (cost=.* rows=17 width=4)
--?   ->  Result  (cost=.* rows=10 width=4)
--?         ->  HashSetOp Except All  (cost=.* rows=10 width=4)
--?               ->  Append  (cost=.* rows=16 width=4)
--?                     ->  Subquery Scan on "*SELECT* 1"  (cost=.* rows=10 width=4)
--?                           ->  Gather  (cost=.* rows=10 width=4)
                                 Number of Workers: 1
--?                                 ->  Parallel Seq Scan on d  (cost=.* rows=6 width=4)
--?                     ->  Result  (cost=.* rows=6 width=4)
--?                           ->  HashSetOp Except  (cost=.* rows=6 width=4)
--?                                 ->  Append  (cost=.* rows=15 width=4)
--?                                       ->  Subquery Scan on "*SELECT* 2"  (cost=.* rows=10 width=4)
--?                                             ->  Gather  (cost=.* rows=10 width=4)
                                                   Number of Workers: 1
--?                                                   ->  Parallel Seq Scan on d  (cost=.* rows=6 width=4)
--?                                       ->  Subquery Scan on "*SELECT* 3"  (cost=.* rows=5 width=4)
--?                                             ->  Gather  (cost=.* rows=5 width=4)
                                                   Number of Workers: 1
--?                                                   ->  Parallel Seq Scan on c  (cost=.* rows=3 width=4)
--?   ->  Gather  (cost=.* rows=7 width=4)
         Number of Workers: 1
--?         ->  Parallel Seq Scan on e  (cost=.* rows=4 width=4)
(22 rows)

explain select * from a union all (select * from b union select * from c where c1 < 5);
--?.*QUERY PLAN.*
--?------------.*
--? Append  (cost=.* rows=12 width=12)
--?   ->  Gather  (cost=.* rows=5 width=12)
         Number of Workers: 1
--?         ->  Parallel Seq Scan on a  (cost=.* rows=3 width=12)
--?   ->  HashAggregate  (cost=.* rows=7 width=12)
         Group By Key: b.b1, b.b2, b.b3
--?         ->  Append  (cost=.* rows=7 width=12)
--?               ->  Gather  (cost=.* rows=5 width=12)
                     Number of Workers: 1
--?                     ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
--?               ->  Gather  (cost=.* rows=2 width=12)
                     Number of Workers: 1
--?                     ->  Parallel Seq Scan on c  (cost=.* rows=1 width=12)
                           Filter: (c1 < 5)
(14 rows)

explain select * from a except select * from b union select * from c;
--?.*QUERY PLAN.*
--?-------------.*
--? HashAggregate  (cost=.* rows=10 width=12)
   Group By Key: "*SELECT* 1".a1, "*SELECT* 1".a2, "*SELECT* 1".a3
--?   ->  Append  (cost=.* rows=10 width=12)
--?         ->  Result  (cost=.* rows=5 width=12)
--?               ->  HashSetOp Except  (cost=.* rows=5 width=12)
--?                     ->  Append  (cost=.* rows=10 width=12)
--?                           ->  Subquery Scan on "*SELECT* 1"  (cost=.* rows=5 width=12)
--?                                 ->  Gather  (cost=.* rows=5 width=12)
                                       Number of Workers: 1
--?                                       ->  Parallel Seq Scan on a  (cost=.* rows=3 width=12)
--?                           ->  Subquery Scan on "*SELECT* 2"  (cost=.* rows=5 width=12)
--?                                 ->  Gather  (cost=.* rows=5 width=12)
                                       Number of Workers: 1
--?                                       ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
--?         ->  Gather  (cost=.* rows=5 width=12)
               Number of Workers: 1
--?               ->  Parallel Seq Scan on c  (cost=.* rows=3 width=12)
(17 rows)

explain select * from b union all (select * from (select * from a union all select * from b));
--?.*   QUERY PLAN.*
--?---------.*
--? Gather  (cost=.* rows=15 width=12)
   Number of Workers: 2
--?   ->  Parallel Append  (cost=.* rows=6 width=12)
--?         ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
--?         ->  Parallel Seq Scan on a  (cost=.* rows=3 width=12)
--?         ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
(6 rows)

explain select * from (select * from a union all select * from b)as x, (select * from d union all select* from e)as y
    where x.a1 = y.d1 order by 1, 2, 3, 4, 5, 6;
--?.*  QUERY PLAN.*
--?--------.*
--? Sort  (cost=.* rows=10 width=24)
   Sort Key: a.a1, a.a2, a.a3, d.d2, d.d3
--?   ->  Hash Join  (cost=.* rows=10 width=24)
         Hash Cond: (d.d1 = a.a1)
--?         ->  Gather  (cost=.* rows=17 width=12)
               Number of Workers: 2
--?               ->  Parallel Append  (cost=.* rows=7 width=12)
--?                     ->  Parallel Seq Scan on d  (cost=.* rows=6 width=12)
--?                     ->  Parallel Seq Scan on e  (cost=.* rows=4 width=12)
--?         ->  Hash  (cost=.* rows=10 width=12)
--?               ->  Gather  (cost=.* rows=10 width=12)
                     Number of Workers: 2
--?                     ->  Parallel Append  (cost=.* rows=4 width=12)
--?                           ->  Parallel Seq Scan on a  (cost=.* rows=3 width=12)
--?                           ->  Parallel Seq Scan on b  (cost=.* rows=3 width=12)
(15 rows)

----------------------------------------
-- clean up
----------------------------------------
reset max_parallel_workers_per_gather;
reset force_parallel_mode;
reset min_parallel_table_scan_size;
reset parallel_tuple_cost;
reset parallel_setup_cost;
reset enable_parallel_append;
drop schema parallel_append_schema cascade;
NOTICE:  drop cascades to 5 other objects
DETAIL:  drop cascades to table a
drop cascades to table b
drop cascades to table c
drop cascades to table d
drop cascades to table e
