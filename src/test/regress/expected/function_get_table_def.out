create schema test_get_table_def;
set current_schema=test_get_table_def;
create table table_function_export_def_base (
    id integer primary key,
    name varchar(100)
);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "table_function_export_def_base_pkey" for table "table_function_export_def_base"
create table table_function_export_def (
    id integer primary key,
    fid integer,
    constraint table_export_base_fkey foreign key (fid) references table_function_export_def_base(id)
);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "table_function_export_def_pkey" for table "table_function_export_def"
select * from pg_get_tabledef('table_function_export_def');
                                            pg_get_tabledef                                            
-------------------------------------------------------------------------------------------------------
 SET search_path = test_get_table_def;                                                                +
 CREATE TABLE table_function_export_def (                                                             +
         id integer NOT NULL,                                                                         +
         fid integer,                                                                                 +
     CONSTRAINT table_export_base_fkey FOREIGN KEY (fid) REFERENCES table_function_export_def_base(id)+
 )                                                                                                    +
 WITH (orientation=row, compression=no);                                                              +
 ALTER TABLE table_function_export_def ADD CONSTRAINT table_function_export_def_pkey PRIMARY KEY (id);
(1 row)

drop table table_function_export_def;
drop table table_function_export_def_base;
--
---- test for partition table
--
--range table
create table table_range1 (id int, a date, b varchar)
partition by range (id)
(
    partition table_range1_p1 values less than(10),
    partition table_range1_p2 values less than(50),
    partition table_range1_p3 values less than(100),
    partition table_range1_p4 values less than(maxvalue)
);
select * from pg_get_tabledef('table_range1');
                                   pg_get_tabledef                                    
--------------------------------------------------------------------------------------
 SET search_path = test_get_table_def;                                               +
 CREATE TABLE table_range1 (                                                         +
         id integer,                                                                 +
         a timestamp(0) without time zone,                                           +
         b character varying                                                         +
 )                                                                                   +
 WITH (orientation=row, compression=no)                                              +
 PARTITION BY RANGE (id)                                                             +
 (                                                                                   +
          PARTITION table_range1_p1 VALUES LESS THAN (10) TABLESPACE pg_default,     +
          PARTITION table_range1_p2 VALUES LESS THAN (50) TABLESPACE pg_default,     +
          PARTITION table_range1_p3 VALUES LESS THAN (100) TABLESPACE pg_default,    +
          PARTITION table_range1_p4 VALUES LESS THAN (MAXVALUE) TABLESPACE pg_default+
 )                                                                                   +
 ENABLE ROW MOVEMENT;
(1 row)

drop table table_range1;
create table table_range2 (id int, a date, b varchar)
partition by range (a)
(
    partition table_range2_p1 values less than('2020-03-01'),
    partition table_range2_p2 values less than('2020-05-01'),
    partition table_range2_p3 values less than('2020-07-01'),
    partition table_range2_p4 values less than(maxvalue)
);
select * from pg_get_tabledef('table_range2');
                                      pg_get_tabledef                                      
-------------------------------------------------------------------------------------------
 SET search_path = test_get_table_def;                                                    +
 CREATE TABLE table_range2 (                                                              +
         id integer,                                                                      +
         a timestamp(0) without time zone,                                                +
         b character varying                                                              +
 )                                                                                        +
 WITH (orientation=row, compression=no)                                                   +
 PARTITION BY RANGE (a)                                                                   +
 (                                                                                        +
          PARTITION table_range2_p1 VALUES LESS THAN ('2020-03-01') TABLESPACE pg_default,+
          PARTITION table_range2_p2 VALUES LESS THAN ('2020-05-01') TABLESPACE pg_default,+
          PARTITION table_range2_p3 VALUES LESS THAN ('2020-07-01') TABLESPACE pg_default,+
          PARTITION table_range2_p4 VALUES LESS THAN (MAXVALUE) TABLESPACE pg_default     +
 )                                                                                        +
 ENABLE ROW MOVEMENT;
(1 row)

drop table table_range2;
create table table_range3 (id int, a date, b varchar)
partition by range (id, a)
(
    partition table_range3_p1 values less than(10, '2020-03-01'),
    partition table_range3_p2 values less than(50, '2020-05-01'),
    partition table_range3_p3 values less than(100, '2020-07-01'),
    partition table_range3_p4 values less than(maxvalue, maxvalue)
);
select * from pg_get_tabledef('table_range3');
                                        pg_get_tabledef                                         
------------------------------------------------------------------------------------------------
 SET search_path = test_get_table_def;                                                         +
 CREATE TABLE table_range3 (                                                                   +
         id integer,                                                                           +
         a timestamp(0) without time zone,                                                     +
         b character varying                                                                   +
 )                                                                                             +
 WITH (orientation=row, compression=no)                                                        +
 PARTITION BY RANGE (id, a)                                                                    +
 (                                                                                             +
          PARTITION table_range3_p1 VALUES LESS THAN (10, '2020-03-01') TABLESPACE pg_default, +
          PARTITION table_range3_p2 VALUES LESS THAN (50, '2020-05-01') TABLESPACE pg_default, +
          PARTITION table_range3_p3 VALUES LESS THAN (100, '2020-07-01') TABLESPACE pg_default,+
          PARTITION table_range3_p4 VALUES LESS THAN (MAXVALUE, MAXVALUE) TABLESPACE pg_default+
 )                                                                                             +
 ENABLE ROW MOVEMENT;
(1 row)

drop table table_range3;
--interval table
create table table_interval1 (id int, a date, b varchar)
partition by range (a)
interval ('1 day')
(
    partition table_interval1_p1 values less than('2020-03-01'),
    partition table_interval1_p2 values less than('2020-05-01'),
    partition table_interval1_p3 values less than('2020-07-01'),
    partition table_interval1_p4 values less than(maxvalue)
);
select * from pg_get_tabledef('table_interval1');
                                       pg_get_tabledef                                        
----------------------------------------------------------------------------------------------
 SET search_path = test_get_table_def;                                                       +
 CREATE TABLE table_interval1 (                                                              +
         id integer,                                                                         +
         a timestamp(0) without time zone,                                                   +
         b character varying                                                                 +
 )                                                                                           +
 WITH (orientation=row, compression=no)                                                      +
 PARTITION BY RANGE (a)                                                                      +
 INTERVAL ('1 day')                                                                          +
 (                                                                                           +
          PARTITION table_interval1_p1 VALUES LESS THAN ('2020-03-01') TABLESPACE pg_default,+
          PARTITION table_interval1_p2 VALUES LESS THAN ('2020-05-01') TABLESPACE pg_default,+
          PARTITION table_interval1_p3 VALUES LESS THAN ('2020-07-01') TABLESPACE pg_default,+
          PARTITION table_interval1_p4 VALUES LESS THAN (MAXVALUE) TABLESPACE pg_default     +
 )                                                                                           +
 ENABLE ROW MOVEMENT;
(1 row)

drop table table_interval1;
--list table
create table table_list1 (id int, a date, b varchar)
partition by list (id)
(
    partition table_list1_p1 values (1, 2, 3, 4),
    partition table_list1_p2 values (5, 6, 7, 8),
    partition table_list1_p3 values (9, 10, 11, 12)
);
select * from pg_get_tabledef('table_list1');
                               pg_get_tabledef                               
-----------------------------------------------------------------------------
 SET search_path = test_get_table_def;                                      +
 CREATE TABLE table_list1 (                                                 +
         id integer,                                                        +
         a timestamp(0) without time zone,                                  +
         b character varying                                                +
 )                                                                          +
 WITH (orientation=row, compression=no)                                     +
 PARTITION BY LIST (id)                                                     +
 (                                                                          +
          PARTITION table_list1_p1 VALUES (1,2,3,4) TABLESPACE pg_default,  +
          PARTITION table_list1_p2 VALUES (5,6,7,8) TABLESPACE pg_default,  +
          PARTITION table_list1_p3 VALUES (9,10,11,12) TABLESPACE pg_default+
 )                                                                          +
 ENABLE ROW MOVEMENT;
(1 row)

drop table table_list1;
create table table_list2 (id int, a date, b varchar)
partition by list (b)
(
    partition table_list2_p1 values ('1', '2', '3', '4'),
    partition table_list2_p2 values ('5', '6', '7', '8'),
    partition table_list2_p3 values ('9', '10', '11', '12')
);
select * from pg_get_tabledef('table_list2');
                                    pg_get_tabledef                                     
----------------------------------------------------------------------------------------
 SET search_path = test_get_table_def;                                                 +
 CREATE TABLE table_list2 (                                                            +
         id integer,                                                                   +
         a timestamp(0) without time zone,                                             +
         b character varying                                                           +
 )                                                                                     +
 WITH (orientation=row, compression=no)                                                +
 PARTITION BY LIST (b)                                                                 +
 (                                                                                     +
          PARTITION table_list2_p1 VALUES ('1', '2', '3', '4') TABLESPACE pg_default,  +
          PARTITION table_list2_p2 VALUES ('5', '6', '7', '8') TABLESPACE pg_default,  +
          PARTITION table_list2_p3 VALUES ('9', '10', '11', '12') TABLESPACE pg_default+
 )                                                                                     +
 ENABLE ROW MOVEMENT;
(1 row)

drop table table_list2;
--hash table
create table table_hash1 (id int, a date, b varchar)
partition by hash (id)
(
    partition table_hash1_p1,
    partition table_hash1_p2,
    partition table_hash1_p3
);
select * from pg_get_tabledef('table_hash1');
                     pg_get_tabledef                      
----------------------------------------------------------
 SET search_path = test_get_table_def;                   +
 CREATE TABLE table_hash1 (                              +
         id integer,                                     +
         a timestamp(0) without time zone,               +
         b character varying                             +
 )                                                       +
 WITH (orientation=row, compression=no)                  +
 PARTITION BY HASH (id)                                  +
 (                                                       +
          PARTITION table_hash1_p1 TABLESPACE pg_default,+
          PARTITION table_hash1_p2 TABLESPACE pg_default,+
          PARTITION table_hash1_p3 TABLESPACE pg_default +
 )                                                       +
 ENABLE ROW MOVEMENT;
(1 row)

drop table table_hash1;
reset current_schema;
drop schema test_get_table_def cascade;
