--------------------------------------------------------------------
-------------------test rownum pseudocolumn ------------------------
--------------------------------------------------------------------

------------------------------------
--test the basic function of rownum
------------------------------------

--create test table
create table rownum_table (name varchar(20), age int, address varchar(20));

--insert data to test table
insert into rownum_table values ('leon', 23, 'xian');
insert into rownum_table values ('james', 24, 'bejing');
insert into rownum_table values ('jack', 35, 'xian');
insert into rownum_table values ('mary', 42, 'chengdu');
insert into rownum_table values ('perl', 35, 'shengzhen');
insert into rownum_table values ('rose', 64, 'xian');
insert into rownum_table values ('under', 57, 'xianyang');
insert into rownum_table values ('taker', 81, 'shanghai');
insert into rownum_table values ('frank', 19, 'luoyang');
insert into rownum_table values ('angel', 100, 'xian');

--the query to test rownum
select * from rownum_table where rownum < 5;
 name  | age | address 
-------+-----+---------
 leon  |  23 | xian
 james |  24 | bejing
 jack  |  35 | xian
 mary  |  42 | chengdu
(4 rows)

select rownum, * from rownum_table where rownum < 1;
 rownum | name | age | address 
--------+------+-----+---------
(0 rows)

select rownum, * from rownum_table where rownum <= 1;
 rownum | name | age | address 
--------+------+-----+---------
      1 | leon |  23 | xian
(1 row)

select rownum, * from rownum_table where rownum <= 10;
 rownum | name  | age |  address  
--------+-------+-----+-----------
      1 | leon  |  23 | xian
      2 | james |  24 | bejing
      3 | jack  |  35 | xian
      4 | mary  |  42 | chengdu
      5 | perl  |  35 | shengzhen
      6 | rose  |  64 | xian
      7 | under |  57 | xianyang
      8 | taker |  81 | shanghai
      9 | frank |  19 | luoyang
     10 | angel | 100 | xian
(10 rows)

select rownum, * from rownum_table where address = 'xian';
 rownum | name  | age | address 
--------+-------+-----+---------
      1 | leon  |  23 | xian
      2 | jack  |  35 | xian
      3 | rose  |  64 | xian
      4 | angel | 100 | xian
(4 rows)

select rownum, * from rownum_table where address = 'xian' and rownum < 4;
 rownum | name | age | address 
--------+------+-----+---------
      1 | leon |  23 | xian
      2 | jack |  35 | xian
      3 | rose |  64 | xian
(3 rows)

select rownum, name, address, age from rownum_table where address = 'xian' or rownum < 8;
 rownum | name  |  address  | age 
--------+-------+-----------+-----
      1 | leon  | xian      |  23
      2 | james | bejing    |  24
      3 | jack  | xian      |  35
      4 | mary  | chengdu   |  42
      5 | perl  | shengzhen |  35
      6 | rose  | xian      |  64
      7 | under | xianyang  |  57
      8 | angel | xian      | 100
(8 rows)


------------------
--avoid optimize
------------------

--test order by
--create test table
create table test_table
(
    id       integer       primary key ,
    name     varchar2(20)  ,
    age      integer       check(age > 0),
    address  varchar2(20)   not null,
    tele     varchar2(20)   default '101'
);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "test_table_pkey" for table "test_table"
--insert data
insert into test_table values(1,'charlie', 40, 'shanghai');
insert into test_table values(2,'lincon', 10, 'xianyang');
insert into test_table values(3,'charlie', 40, 'chengdu');
insert into test_table values(4,'lincon', 10, 'xian', '');
insert into test_table values(5,'charlie', 40, 'chengdu');
insert into test_table values(6,'lincon', 10, 'xian', '12345657');
--test order by
select * from (select * from test_table order by id) as result where rownum < 4;
 id |  name   | age | address  | tele 
----+---------+-----+----------+------
  1 | charlie |  40 | shanghai | 101
  2 | lincon  |  10 | xianyang | 101
  3 | charlie |  40 | chengdu  | 101
(3 rows)

select * from (select * from test_table order by id desc) as result where rownum < 2;
 id |  name  | age | address |   tele   
----+--------+-----+---------+----------
  6 | lincon |  10 | xian    | 12345657
(1 row)

select * from (select * from test_table order by id asc) as result where rownum <= 5;
 id |  name   | age | address  | tele 
----+---------+-----+----------+------
  1 | charlie |  40 | shanghai | 101
  2 | lincon  |  10 | xianyang | 101
  3 | charlie |  40 | chengdu  | 101
  4 | lincon  |  10 | xian     | 
  5 | charlie |  40 | chengdu  | 101
(5 rows)


--test union and intersect
--create test table
create table distributors (id int, name varchar(20));
create table actors (id int, name varchar(20));
--insert data
insert into distributors values (1, 'westward');
insert into distributors values (1, 'walt disney');
insert into distributors values (1, 'warner bros');
insert into distributors values (1, 'warren beatty');

insert into actors values (1, 'woody allen');
insert into actors values (1, 'warren beatty');
insert into actors values (1, 'walter matthau');
insert into actors values (1, 'westward');
--test union
select rownum, name from (select name from distributors union all select name from actors order by 1) as result where rownum <= 1;
 rownum |    name     
--------+-------------
      1 | walt disney
(1 row)

select rownum, name from (select name from distributors union all select name from actors order by 1) as result where rownum < 3;
 rownum |      name      
--------+----------------
      1 | walt disney
      2 | walter matthau
(2 rows)

select rownum, name from (select name from distributors union all select name from actors order by 1) as result where rownum < 6;
 rownum |      name      
--------+----------------
      1 | walt disney
      2 | walter matthau
      3 | warner bros
      4 | warren beatty
      5 | warren beatty
(5 rows)

select rownum, name from (select name from distributors where rownum < 3 union all select name from actors where rownum < 3 order by 1) as result;
 rownum |     name      
--------+---------------
      1 | walt disney
      2 | warren beatty
      3 | westward
      4 | woody allen
(4 rows)

--test intersect
select rownum, name from (select name from distributors intersect all select name from actors order by 1) as result where rownum <= 1;
 rownum |     name      
--------+---------------
      1 | warren beatty
(1 row)

select rownum, name from (select name from distributors intersect all select name from actors order by 1) as result where rownum < 3;
 rownum |     name      
--------+---------------
      1 | warren beatty
      2 | westward
(2 rows)

select rownum, name from (select name from distributors intersect all select name from actors order by 1) as result where rownum < 6;
 rownum |     name      
--------+---------------
      1 | warren beatty
      2 | westward
(2 rows)

select rownum, name from (select name from distributors where rownum <= 4 intersect all select name from actors where rownum <= 4 order by 1) as result;
 rownum |     name      
--------+---------------
      1 | warren beatty
      2 | westward
(2 rows)


--test except and minus
--create test table
create table except_table (a int, b int);
create table except_table1 (a int, b int);
--insert data
insert into except_table values (3, 4);
insert into except_table values (5, 4);
insert into except_table values (3, 4);
insert into except_table values (4, 4);
insert into except_table values (6, 4);
insert into except_table values (3, 4);
insert into except_table values (3, 4); 
insert into except_table1 values (3, 4);
--test except and minus
select rownum, * from (select * from except_table except select * from except_table1 order by 1) as result where rownum <= 2;
 rownum | a | b 
--------+---+---
      1 | 4 | 4
      2 | 5 | 4
(2 rows)

select rownum, * from (select * from except_table minus select * from except_table1 order by 1) as result where rownum <= 3;
 rownum | a | b 
--------+---+---
      1 | 4 | 4
      2 | 5 | 4
      3 | 6 | 4
(3 rows)

select rownum, * from (select * from except_table where rownum <= 3 except select * from except_table1 where rownum <=2 order by 1) as result;
 rownum | a | b 
--------+---+---
      1 | 5 | 4
(1 row)

select rownum, * from (select * from except_table where rownum <= 3 minus select * from except_table1 where rownum <=2 order by 1) as result;
 rownum | a | b 
--------+---+---
      1 | 5 | 4
(1 row)


--drop the test table
drop table rownum_table;
drop table test_table;
drop table distributors;
drop table actors;
drop table except_table;
drop table except_table1;

create table tbl_a(v1 integer);
insert into tbl_a values(1001);
insert into tbl_a values(1002);
insert into tbl_a values(1003);
insert into tbl_a values(1004);
insert into tbl_a values(1005);
insert into tbl_a values(1002);
create table tbl_b(v1 integer, v2 integer);
insert into tbl_b values (1001,214);
insert into tbl_b values (1003,216);
insert into tbl_b values (1002,213);
insert into tbl_b values (1002,212);
insert into tbl_b values (1002,211);
insert into tbl_b values (1003,217);
insert into tbl_b values (1005,218);
update tbl_a a set a.v1 = (select v2 from tbl_b b where a.v1 = b.v1 and rownum <= 1);
select * from tbl_a order by 1;
 v1  
-----
 213
 213
 214
 216
 218
    
(6 rows)


update tbl_b set v2 = rownum where v1 = 1002;
select * from tbl_b where v1 = 1002 and rownum < 4 order by 1, 2;
  v1  | v2 
------+----
 1002 |  1
 1002 |  2
 1002 |  3
(3 rows)


delete tbl_b where rownum > 3 and v1 = 1002;
delete tbl_b where rownum < 100 and v1 = 1002;

select * from tbl_b order by 1, 2;
  v1  | v2  
------+-----
 1001 | 214
 1003 | 216
 1003 | 217
 1005 | 218
(4 rows)


drop table tbl_a;
drop table tbl_b;

--adapt pseudocolumn "rowid" of oracle, using "ctid" of postgresql
create table test_tbl(myint integer);
insert into test_tbl values(1);
insert into test_tbl values(2);
insert into test_tbl values(3);
select rowid,* from test_tbl;
ERROR:  column "rowid" does not exist
LINE 1: select rowid,* from test_tbl;
               ^
CONTEXT:  referenced column: rowid
select max(rowid) from test_tbl;
ERROR:  column "rowid" does not exist
LINE 1: select max(rowid) from test_tbl;
                   ^
CONTEXT:  referenced column: max
delete from test_tbl a where a.rowid != (select max(b.rowid) from test_tbl b);
ERROR:  column a.rowid does not exist
LINE 1: delete from test_tbl a where a.rowid != (select max(b.rowid)...
                                     ^
select rowid,* from test_tbl;
ERROR:  column "rowid" does not exist
LINE 1: select rowid,* from test_tbl;
               ^
CONTEXT:  referenced column: rowid
drop table test_tbl;

create table aaaa (
    smgwname character varying(255),
    seid character varying(33),
    igmgwidx integer,
    imsflag smallint
);
insert into aaaa values ('mrp', 'mrp', 0, 1);

create table bbbb (
    imgwindex integer,
    imsflag smallint
);
insert into bbbb values (0, 1);
insert into bbbb values (0, 1);
select (select a1.smgwname from aaaa a1 where a1.seid = ( select a2.seid from aaaa a2 where a2.igmgwidx = b.imgwindex and a2.imsflag = b.imsflag and rownum <=1)) from bbbb b;
 smgwname 
----------
 mrp
 mrp
(2 rows)

drop table aaaa;
drop table bbbb;
