create table parallel_t1(a int);
insert into parallel_t1 values(generate_series(1,100000));
--normal plan for seq scan
explain (costs off) select count(*) from parallel_t1;
          QUERY PLAN           
-------------------------------
 Aggregate
   ->  Seq Scan on parallel_t1
(2 rows)

explain (costs off) select count(*) from parallel_t1 where a = 5000;
          QUERY PLAN           
-------------------------------
 Aggregate
   ->  Seq Scan on parallel_t1
         Filter: (a = 5000)
(3 rows)

explain (costs off) select count(*) from parallel_t1 where a > 5000;
          QUERY PLAN           
-------------------------------
 Aggregate
   ->  Seq Scan on parallel_t1
         Filter: (a > 5000)
(3 rows)

explain (costs off) select count(*) from parallel_t1 where a < 5000;
          QUERY PLAN           
-------------------------------
 Aggregate
   ->  Seq Scan on parallel_t1
         Filter: (a < 5000)
(3 rows)

explain (costs off) select count(*) from parallel_t1 where a <> 5000;
          QUERY PLAN           
-------------------------------
 Aggregate
   ->  Seq Scan on parallel_t1
         Filter: (a <> 5000)
(3 rows)

select count(*) from parallel_t1;
 count  
--------
 100000
(1 row)

select count(*) from parallel_t1 where a = 5000;
 count 
-------
     1
(1 row)

select count(*) from parallel_t1 where a > 5000;
 count 
-------
 95000
(1 row)

select count(*) from parallel_t1 where a < 5000;
 count 
-------
  4999
(1 row)

select count(*) from parallel_t1 where a <> 5000;
 count 
-------
 99999
(1 row)

--set parallel parameter
set force_parallel_mode=on;
set parallel_setup_cost=0;
set parallel_tuple_cost=0.000005;
set max_parallel_workers_per_gather=2;
set min_parallel_table_scan_size=0;
set parallel_leader_participation=on;
--parallel plan for seq scan
explain (costs off) select count(*) from parallel_t1;
                  QUERY PLAN                  
----------------------------------------------
 Aggregate
   ->  Gather
         Number of Workers: 2
         ->  Parallel Seq Scan on parallel_t1
(4 rows)

explain (costs off) select count(*) from parallel_t1 where a = 5000;
                  QUERY PLAN                  
----------------------------------------------
 Aggregate
   ->  Gather
         Number of Workers: 2
         ->  Parallel Seq Scan on parallel_t1
               Filter: (a = 5000)
(5 rows)

explain (costs off) select count(*) from parallel_t1 where a > 5000;
                  QUERY PLAN                  
----------------------------------------------
 Aggregate
   ->  Gather
         Number of Workers: 2
         ->  Parallel Seq Scan on parallel_t1
               Filter: (a > 5000)
(5 rows)

explain (costs off) select count(*) from parallel_t1 where a < 5000;
                  QUERY PLAN                  
----------------------------------------------
 Aggregate
   ->  Gather
         Number of Workers: 2
         ->  Parallel Seq Scan on parallel_t1
               Filter: (a < 5000)
(5 rows)

explain (costs off) select count(*) from parallel_t1 where a <> 5000;
                  QUERY PLAN                  
----------------------------------------------
 Aggregate
   ->  Gather
         Number of Workers: 2
         ->  Parallel Seq Scan on parallel_t1
               Filter: (a <> 5000)
(5 rows)

select count(*) from parallel_t1;
 count  
--------
 100000
(1 row)

select count(*) from parallel_t1 where a = 5000;
 count 
-------
     1
(1 row)

select count(*) from parallel_t1 where a > 5000;
 count 
-------
 95000
(1 row)

select count(*) from parallel_t1 where a < 5000;
 count 
-------
  4999
(1 row)

select count(*) from parallel_t1 where a <> 5000;
 count 
-------
 99999
(1 row)

--clean up
drop table parallel_t1;
reset force_parallel_mode;
reset parallel_setup_cost;
reset parallel_tuple_cost;
reset max_parallel_workers_per_gather;
reset min_parallel_table_scan_size;
reset parallel_leader_participation;
