\! gs_ktool -d all
DELETE ALL

\! gs_ktool -g
GENERATE
1
DROP CLIENT MASTER KEY IF EXISTS ret_cmk1 CASCADE;
NOTICE:  client master key "ret_cmk1" does not exist
CREATE CLIENT MASTER KEY ret_cmk1 WITH ( KEY_STORE = gs_ktool , KEY_PATH = "gs_ktool/1" , ALGORITHM = AES_256_CBC);
CREATE COLUMN ENCRYPTION KEY ret_cek1 WITH VALUES (CLIENT_MASTER_KEY = ret_cmk1, ALGORITHM = AEAD_AES_256_CBC_HMAC_SHA256);
create table accounts (
    id serial,
    name varchar(100) not null ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = ret_cek1, ENCRYPTION_TYPE = DETERMINISTIC),
    balance dec(15,2) not null ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = ret_cek1, ENCRYPTION_TYPE = DETERMINISTIC),
    primary key(id)
);
NOTICE:  CREATE TABLE will create implicit sequence "accounts_id_seq" for serial column "accounts.id"
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "accounts_pkey" for table "accounts"
insert into accounts(name,balance) values('Bob',10000);
insert into accounts(name,balance) values('Alice',10000);
CREATE FUNCTION select2() RETURNS accounts LANGUAGE SQL AS 'SELECT * from accounts;'; 
CREATE FUNCTION select4() RETURNS SETOF accounts LANGUAGE SQL AS 'SELECT * from accounts;';
CALL select2();
 id | name | balance  
----+------+----------
  1 | Bob  | 10000.00
(1 row)

CALL select4();
 id | name  | balance  
----+-------+----------
  1 | Bob   | 10000.00
  2 | Alice | 10000.00
(2 rows)

SELECT select2();
      select2      
-------------------
 (1,Bob, 10000.00)
(1 row)

SELECT select4();
       select4       
---------------------
 (1,Bob, 10000.00)
 (2,Alice, 10000.00)
(2 rows)

DROP FUNCTION select2();
DROP FUNCTION select4();
DROP TABLE accounts;
DROP COLUMN ENCRYPTION KEY ret_cek1;
DROP CLIENT MASTER KEY ret_cmk1;
\! gs_ktool -d all
DELETE ALL
 1
