DROP DATABASE IF EXISTS test_db;
NOTICE:  database "test_db" does not exist, skipping
CREATE DATABASE test_db DBCOMPATIBILITY 'B';
CREATE USER root_test WITH PASSWORD 'openGauss@123';
GRANT ALL PRIVILEGES TO root_test;
\c test_db
SET ROLE root_test PASSWORD 'openGauss@123';
CREATE USER test_user with password 'openGauss@123';
CREATE VIEW definer_test_view1 AS SELECT log(10, 100);
CREATE DEFINER=test_user VIEW definer_test_view2 AS SELECT log(10, 100);
ERROR:  permission denied for schema public
DETAIL:  N/A
CREATE OR REPLACE DEFINER=test_user VIEW definer_test_view3 AS SELECT log(10, 100);
ERROR:  permission denied for schema public
DETAIL:  N/A
GRANT ALL PRIVILEGES TO test_user;
CREATE DEFINER=test_user VIEW definer_test_view2 AS SELECT log(10, 100);
CREATE OR REPLACE DEFINER=test_user VIEW definer_test_view3 AS SELECT log(10, 100);
SELECT c.relname as view_name, u.usename as rolname FROM pg_class c, pg_user u WHERE u.usesysid = c.relowner AND relname like '%definer_test_view%';
     view_name      |  rolname  
--------------------+-----------
 definer_test_view1 | root_test
 definer_test_view2 | test_user
 definer_test_view3 | test_user
(3 rows)

CREATE USER test_user2 with password 'openGauss@123';
SELECT * FROM definer_test_view1;
        log         
--------------------
 2.0000000000000000
(1 row)

ALTER VIEW definer_test_view1 AS SELECT log(10, 1000);
SELECT * FROM definer_test_view1;
        log         
--------------------
 3.0000000000000000
(1 row)

ALTER DEFINER=test_user2 VIEW definer_test_view2 AS SELECT log(10, 100);
SELECT c.relname as view_name, u.usename as rolname FROM pg_class c, pg_user u WHERE u.usesysid = c.relowner AND relname like '%definer_test_view%';
     view_name      |  rolname   
--------------------+------------
 definer_test_view1 | root_test
 definer_test_view2 | test_user2
 definer_test_view3 | test_user
(3 rows)

-- dump all views
\! @abs_bindir@/gs_dump test_db -p @portstring@ --include-depend-objs --exclude-self | grep -vE '^SET|^REVOKE|^GRANT|^--|^gs_dump|^COMMENT|^ALTER|^DROP'| tr -s â€˜'\n' > @abs_bindir@/definer_view_dump.sql 2>&1
\! cat @abs_bindir@/definer_view_dump.sql

CREATE SCHEMA test_user;
CREATE SCHEMA test_user2;
CREATE  DEFINER = root_test  VIEW definer_test_view1(log) AS
    SELECT log((10)::numeric, (1000)::numeric) AS log;
CREATE  DEFINER = test_user2  VIEW definer_test_view2(log) AS
    SELECT log((10)::numeric, (100)::numeric) AS log;
CREATE  DEFINER = test_user  VIEW definer_test_view3(log) AS
    SELECT log((10)::numeric, (100)::numeric) AS log;
DROP VIEW definer_test_view1;
DROP VIEW definer_test_view2;
DROP VIEW definer_test_view3;
DROP SCHEMA test_user;
DROP SCHEMA test_user2;
GRANT ALL PRIVILEGES TO test_user2;
\i @abs_bindir@/definer_view_dump.sql
CREATE SCHEMA test_user;
CREATE SCHEMA test_user2;
CREATE  DEFINER = root_test  VIEW definer_test_view1(log) AS
    SELECT log((10)::numeric, (1000)::numeric) AS log;
CREATE  DEFINER = test_user2  VIEW definer_test_view2(log) AS
    SELECT log((10)::numeric, (100)::numeric) AS log;
CREATE  DEFINER = test_user  VIEW definer_test_view3(log) AS
    SELECT log((10)::numeric, (100)::numeric) AS log;
SELECT * FROM definer_test_view1;
        log         
--------------------
 3.0000000000000000
(1 row)

SELECT * FROM definer_test_view2;
        log         
--------------------
 2.0000000000000000
(1 row)

SELECT * FROM definer_test_view3;
        log         
--------------------
 2.0000000000000000
(1 row)

SELECT c.relname as view_name, u.usename as rolname FROM pg_class c, pg_user u WHERE u.usesysid = c.relowner AND relname like '%definer_test_view%';
     view_name      |  rolname   
--------------------+------------
 definer_test_view1 | root_test
 definer_test_view2 | test_user2
 definer_test_view3 | test_user
(3 rows)

RESET ROLE;
create database test_1;
\c test_1
create table startwith_t(id int, level int, connect_by_isleaf int, connect_by_iscycle int);
create view startwith_v as select id, connect_by_isleaf as level, level as connect_by_isleaf from startwith_t;
\! @abs_bindir@/gs_dump test_1 -p @portstring@ -f @abs_bindir@/dump_postgres.sql
--?.*
--?.*
--?.*
--?.*
drop database if exists test_2;
NOTICE:  database "test_2" does not exist, skipping
create database test_2;
\! @abs_bindir@/gsql -d test_2 -p @portstring@ -f @abs_bindir@/dump_postgres.sql
SET
SET
SET
SET
SET
SET
SET
SET
SET
CREATE TABLE
ALTER TABLE
CREATE VIEW
ALTER VIEW
REVOKE
REVOKE
GRANT
GRANT
--?.*
\! @abs_bindir@/gsql -d test_2 -p @portstring@ -c "select * from startwith_v;"
 id | level | connect_by_isleaf 
----+-------+-------------------
(0 rows)

\c regression
drop database test_db;
drop database test_1;
drop database test_2;
DROP USER test_user;
DROP USER test_user2;
DROP USER root_test CASCADE;
